name: Build

on:
  push:
    branches: [develop, master]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: js
            goarch: wasm
          - goos: aix
            goarch: ppc64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: '1.21'

      - name: Build
        run: go build .
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: build

    strategy:
      # Fail fast is disabled because there are Go version specific features and tests
      # that should be able to fail independently.
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        go: ['1.19', '1.20', '1.21']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ matrix.go }}

      - name: Test
        run: go test -race -v ./...

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: paulhatch/semantic-version@v5.3.0
        id: semantic_version
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          major_regexp_flags: ""
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"
          bump_each_commit: false
          user_format_type: "json"
          enable_prerelease_mode: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semantic_version.outputs.version_tag }}
          release_name: Release ${{ steps.semantic_version.outputs.version_tag }}
          body: |
            New Release!
          draft: false
          prerelease: false

